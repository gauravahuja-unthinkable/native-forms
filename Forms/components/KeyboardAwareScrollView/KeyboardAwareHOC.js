var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _regenerator=_interopRequireDefault(require("@babel/runtime/regenerator")),_slicedToArray2=_interopRequireDefault(require("@babel/runtime/helpers/slicedToArray")),_classCallCheck2=_interopRequireDefault(require("@babel/runtime/helpers/classCallCheck")),_createClass2=_interopRequireDefault(require("@babel/runtime/helpers/createClass")),_possibleConstructorReturn2=_interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn")),_getPrototypeOf2=_interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf")),_assertThisInitialized2=_interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized")),_inherits2=_interopRequireDefault(require("@babel/runtime/helpers/inherits")),_defineProperty3=_interopRequireDefault(require("@babel/runtime/helpers/defineProperty")),_objectSpread6=_interopRequireDefault(require("@babel/runtime/helpers/objectSpread")),_react=_interopRequireDefault(require("react")),_propTypes=_interopRequireDefault(require("prop-types")),_reactNative=require("react-native"),_helpers=require("./helpers");function _extends(){return _extends=Object.assign||function(a){for(var b,c=1;c<arguments.length;c++)for(var d in b=arguments[c],b)Object.prototype.hasOwnProperty.call(b,d)&&(a[d]=b[d]);return a},_extends.apply(this,arguments)}function _defineProperty(a,b,c){return b in a?Object.defineProperty(a,b,{value:c,enumerable:!0,configurable:!0,writable:!0}):a[b]=c,a}var _KAM_DEFAULT_TAB_BAR_HEIGHT=(0,_helpers.isIphoneX)()?83:49,_KAM_KEYBOARD_OPENING_TIME=250,_KAM_EXTRA_HEIGHT=75,supportedKeyboardEvents=["keyboardWillShow","keyboardDidShow","keyboardWillHide","keyboardDidHide","keyboardWillChangeFrame","keyboardDidChangeFrame"],keyboardEventToCallbackName=function(a){return"on"+a[0].toUpperCase()+a.substring(1)},keyboardEventPropTypes=supportedKeyboardEvents.reduce(function(a,b){return(0,_objectSpread6.default)({},a,(0,_defineProperty3.default)({},keyboardEventToCallbackName(b),_propTypes.default.func))},{});function getDisplayName(a){return a&&(a.displayName||a.name)||"Component"}var ScrollIntoViewDefaultOptions={enableOnAndroid:!1,contentContainerStyle:void 0,enableAutomaticScroll:!0,extraHeight:_KAM_EXTRA_HEIGHT,extraScrollHeight:0,enableResetScrollToCoords:!0,keyboardOpeningTime:_KAM_KEYBOARD_OPENING_TIME,viewIsInsideTabBar:!1,refPropName:"ref",extractNativeRef:function extractNativeRef(a){return a.getNode?a.getNode():a}};function KeyboardAwareHOC(a){var b,c,d=1<arguments.length&&arguments[1]!==void 0?arguments[1]:{},e=(0,_objectSpread6.default)({},ScrollIntoViewDefaultOptions,{},d);return c=b=function(b){function c(a){var b;(0,_classCallCheck2.default)(this,c),b=(0,_possibleConstructorReturn2.default)(this,(0,_getPrototypeOf2.default)(c).call(this,a)),_defineProperty((0,_assertThisInitialized2.default)(b),"_rnkasv_keyboardView",void 0),_defineProperty((0,_assertThisInitialized2.default)(b),"keyboardWillShowEvent",void 0),_defineProperty((0,_assertThisInitialized2.default)(b),"keyboardWillHideEvent",void 0),_defineProperty((0,_assertThisInitialized2.default)(b),"position",void 0),_defineProperty((0,_assertThisInitialized2.default)(b),"defaultResetScrollToCoords",void 0),_defineProperty((0,_assertThisInitialized2.default)(b),"mountedComponent",void 0),_defineProperty((0,_assertThisInitialized2.default)(b),"handleOnScroll",void 0),_defineProperty((0,_assertThisInitialized2.default)(b),"state",void 0),_defineProperty((0,_assertThisInitialized2.default)(b),"getScrollResponder",function(){return b._rnkasv_keyboardView&&b._rnkasv_keyboardView.getScrollResponder&&b._rnkasv_keyboardView.getScrollResponder()}),_defineProperty((0,_assertThisInitialized2.default)(b),"scrollToPosition",function(a,c){var d=!(2<arguments.length&&void 0!==arguments[2])||arguments[2],e=b.getScrollResponder();e&&e.scrollResponderScrollTo({x:a,y:c,animated:d})}),_defineProperty((0,_assertThisInitialized2.default)(b),"scrollToEnd",function(){var a=!(0<arguments.length&&void 0!==arguments[0])||arguments[0],c=b.getScrollResponder();c&&c.scrollResponderScrollToEnd({animated:a})}),_defineProperty((0,_assertThisInitialized2.default)(b),"scrollForExtraHeightOnAndroid",function(a){b.scrollToPosition(0,b.position.y+a,!0)}),_defineProperty((0,_assertThisInitialized2.default)(b),"scrollToFocusedInput",function(a,c,d){void 0===c&&(c=b.props.extraHeight||0),void 0===d&&(d=b.props.keyboardOpeningTime||0),setTimeout(function(){if(b.mountedComponent){var d=b.getScrollResponder();d&&d.scrollResponderScrollNativeHandleToKeyboard(a,c,!0)}},d)}),_defineProperty((0,_assertThisInitialized2.default)(b),"scrollIntoView",function(a){var c,d,e,f,g,h,i,j,k,l,m=arguments;return _regenerator.default.async(function(n){for(;;)switch(n.prev=n.next){case 0:if(c=1<m.length&&void 0!==m[1]?m[1]:{},b._rnkasv_keyboardView&&a){n.next=3;break}return n.abrupt("return");case 3:return n.next=5,_regenerator.default.awrap(Promise.all([b._measureElement(b._rnkasv_keyboardView),b._measureElement(a)]));case 5:d=n.sent,e=(0,_slicedToArray2.default)(d,2),f=e[0],g=e[1],h=c.getScrollPosition||b._defaultGetScrollPosition,i=h(f,g,b.position),j=i.x,k=i.y,l=i.animated,b.scrollToPosition(j,k,l);case 12:case"end":return n.stop();}})}),_defineProperty((0,_assertThisInitialized2.default)(b),"_defaultGetScrollPosition",function(a,b,c){return{x:0,y:Math.max(0,b.y-a.y+c.y),animated:!0}}),_defineProperty((0,_assertThisInitialized2.default)(b),"_measureElement",function(a){var b=(0,_reactNative.findNodeHandle)(a);return new Promise(function(a){_reactNative.UIManager.measureInWindow(b,function(b,c,d,e){a({x:b,y:c,width:d,height:e})})})}),_defineProperty((0,_assertThisInitialized2.default)(b),"_updateKeyboardSpace",function(a){if(b.props.enableAutomaticScroll){var e=a.endCoordinates.height+b.props.extraScrollHeight;b.props.viewIsInsideTabBar&&(e-=_KAM_DEFAULT_TAB_BAR_HEIGHT),b.setState({keyboardSpace:e});var c=_reactNative.TextInput.State.currentlyFocusedField(),d=b.getScrollResponder();if(!c||!d)return;_reactNative.UIManager.viewIsDescendantOf(c,d.getInnerViewNode(),function(d){d&&_reactNative.UIManager.measureInWindow(c,function(d,f,g,h){var i=f+h,j=a.endCoordinates.screenY,k=b.props.extraScrollHeight+b.props.extraHeight;"ios"===_reactNative.Platform.OS?i>j-k&&b._scrollToFocusedInputWithNodeHandle(c):i>j?(e-=i-j,b.setState({keyboardSpace:e}),b.scrollForExtraHeightOnAndroid(k)):i>j-k&&b.scrollForExtraHeightOnAndroid(k-(j-i))})})}b.props.resetScrollToCoords||b.defaultResetScrollToCoords||(b.defaultResetScrollToCoords=b.position)}),_defineProperty((0,_assertThisInitialized2.default)(b),"_resetKeyboardSpace",function(){var a=b.props.viewIsInsideTabBar?_KAM_DEFAULT_TAB_BAR_HEIGHT:0;return b.setState({keyboardSpace:a}),!1===b.props.enableResetScrollToCoords?void(b.defaultResetScrollToCoords=null):void(b.props.resetScrollToCoords?b.scrollToPosition(b.props.resetScrollToCoords.x,b.props.resetScrollToCoords.y,!0):b.defaultResetScrollToCoords?(b.scrollToPosition(b.defaultResetScrollToCoords.x,b.defaultResetScrollToCoords.y,!0),b.defaultResetScrollToCoords=null):b.scrollToPosition(0,0,!0))}),_defineProperty((0,_assertThisInitialized2.default)(b),"_scrollToFocusedInputWithNodeHandle",function(a,c,d){void 0===c&&(c=b.props.extraHeight);var e=(0,_reactNative.findNodeHandle)(a);b.scrollToFocusedInput(e,c+b.props.extraScrollHeight,void 0===d?b.props.keyboardOpeningTime||0:d)}),_defineProperty((0,_assertThisInitialized2.default)(b),"_handleOnScroll",function(a){b.position=a.nativeEvent.contentOffset}),_defineProperty((0,_assertThisInitialized2.default)(b),"_handleRef",function(a){b._rnkasv_keyboardView=a?e.extractNativeRef(a):a,b.props.innerRef&&b.props.innerRef(b._rnkasv_keyboardView)}),_defineProperty((0,_assertThisInitialized2.default)(b),"update",function(){var a=_reactNative.TextInput.State.currentlyFocusedField(),c=b.getScrollResponder();a&&c&&b._scrollToFocusedInputWithNodeHandle(a)}),b.keyboardWillShowEvent=void 0,b.keyboardWillHideEvent=void 0,b.callbacks={},b.position={x:0,y:0},b.defaultResetScrollToCoords=null;var d=a.viewIsInsideTabBar?_KAM_DEFAULT_TAB_BAR_HEIGHT:0;return b.state={keyboardSpace:d},b}return(0,_inherits2.default)(c,b),(0,_createClass2.default)(c,[{key:"componentDidMount",value:function componentDidMount(){var a=this;this.mountedComponent=!0,"ios"===_reactNative.Platform.OS?(this.keyboardWillShowEvent=_reactNative.Keyboard.addListener("keyboardWillShow",this._updateKeyboardSpace),this.keyboardWillHideEvent=_reactNative.Keyboard.addListener("keyboardWillHide",this._resetKeyboardSpace)):"android"===_reactNative.Platform.OS&&this.props.enableOnAndroid&&(this.keyboardWillShowEvent=_reactNative.Keyboard.addListener("keyboardDidShow",this._updateKeyboardSpace),this.keyboardWillHideEvent=_reactNative.Keyboard.addListener("keyboardDidHide",this._resetKeyboardSpace)),supportedKeyboardEvents.forEach(function(b){var c=keyboardEventToCallbackName(b);a.props[c]&&(a.callbacks[b]=_reactNative.Keyboard.addListener(b,a.props[c]))})}},{key:"componentDidUpdate",value:function componentDidUpdate(a){if(this.props.viewIsInsideTabBar!==a.viewIsInsideTabBar){var b=this.props.viewIsInsideTabBar?_KAM_DEFAULT_TAB_BAR_HEIGHT:0;this.state.keyboardSpace!==b&&this.setState({keyboardSpace:b})}}},{key:"componentWillUnmount",value:function componentWillUnmount(){this.mountedComponent=!1,this.keyboardWillShowEvent&&this.keyboardWillShowEvent.remove(),this.keyboardWillHideEvent&&this.keyboardWillHideEvent.remove(),Object.values(this.callbacks).forEach(function(a){return a.remove()})}},{key:"render",value:function render(){var b,c=this.props,d=c.enableOnAndroid,f=c.contentContainerStyle,g=c.onScroll;"android"===_reactNative.Platform.OS&&d&&(b=[].concat(f).concat({paddingBottom:((f||{}).paddingBottom||0)+this.state.keyboardSpace}));var h=(0,_defineProperty3.default)({},e.refPropName,this._handleRef);return _react.default.createElement(a,_extends({},h,{keyboardDismissMode:"interactive",contentInset:{bottom:this.state.keyboardSpace},automaticallyAdjustContentInsets:!1,showsVerticalScrollIndicator:!0,scrollEventThrottle:1},this.props,{contentContainerStyle:b||f,keyboardSpace:this.state.keyboardSpace,getScrollResponder:this.getScrollResponder,scrollToPosition:this.scrollToPosition,scrollToEnd:this.scrollToEnd,scrollForExtraHeightOnAndroid:this.scrollForExtraHeightOnAndroid,scrollToFocusedInput:this.scrollToFocusedInput,scrollIntoView:this.scrollIntoView,resetKeyboardSpace:this._resetKeyboardSpace,handleOnScroll:this._handleOnScroll,update:this.update,onScroll:_reactNative.Animated.forkEvent(g,this._handleOnScroll)}))}}]),c}(_react.default.Component),_defineProperty(b,"displayName","KeyboardAware"+getDisplayName(a)),_defineProperty(b,"propTypes",(0,_objectSpread6.default)({viewIsInsideTabBar:_propTypes.default.bool,resetScrollToCoords:_propTypes.default.shape({x:_propTypes.default.number.isRequired,y:_propTypes.default.number.isRequired}),enableResetScrollToCoords:_propTypes.default.bool,enableAutomaticScroll:_propTypes.default.bool,extraHeight:_propTypes.default.number,extraScrollHeight:_propTypes.default.number,keyboardOpeningTime:_propTypes.default.number,onScroll:_propTypes.default.oneOfType([_propTypes.default.func,_propTypes.default.object]),update:_propTypes.default.func,contentContainerStyle:_propTypes.default.any,enableOnAndroid:_propTypes.default.bool,innerRef:_propTypes.default.func},keyboardEventPropTypes)),_defineProperty(b,"defaultProps",{enableAutomaticScroll:e.enableAutomaticScroll,extraHeight:e.extraHeight,extraScrollHeight:e.extraScrollHeight,enableResetScrollToCoords:e.enableResetScrollToCoords,keyboardOpeningTime:e.keyboardOpeningTime,viewIsInsideTabBar:e.viewIsInsideTabBar,enableOnAndroid:e.enableOnAndroid}),c}var listenToKeyboardEvents=function(a){return"object"==typeof a?function(b){return KeyboardAwareHOC(b,a)}:KeyboardAwareHOC(a)},_default=listenToKeyboardEvents;exports.default=_default;